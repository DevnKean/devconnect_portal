<?php

namespace AppBundle\Entity;

use AppBundle\Entity\MappedSuperclass\AbstractLogEntry;
use Doctrine\ORM\Mapping as ORM;

/**
 * LogEntry
 *
 * @ORM\Table(name="log_entries")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\LogEntryRepository")
 */
class LogEntry extends AbstractLogEntry
{
    const STATUS_PENDING = 'Pending Admin Review';
    const STATUS_APPROVED = 'Approved';
    const STATUS_READY_FOR_APPROVAL = 'Ready For Approval';
    const STATUS_FEEDBACK = 'Feedback Provided';
    const STATUS_READY_FOR_FEEDBACK = 'Ready For Feedback';
    const STATUS_FEEDBACK_RESPONSE = 'Feedback Response';

    /**
     * @var boolean
     * @ORM\Column(name="feedback_status", type="string", nullable=true)
     */
    private $feedbackStatus = self::STATUS_PENDING;

    /**
     * @var string
     * @ORM\Column(name="feedback", type="text", nullable=true)
     */
    private $feedback;

    /**
     * @var string
     * @ORM\Column(name="supplier_reply", type="text", nullable=true)
     */
    private $supplierReply;

    /**
     * @var boolean
     * @ORM\Column(name="is_read", type="boolean")
     */
    private $isRead = false;

    public function __construct()
    {
        $this->feedbackStatus = self::STATUS_PENDING;
    }

    /**
     * @return bool
     */
    public function getFeedbackStatus()
    {
        return $this->feedbackStatus;
    }

    /**
     * @param string $feedbackStatus
     */
    public function setFeedbackStatus($feedbackStatus)
    {
        $this->feedbackStatus = $feedbackStatus;
    }

    /**
     * @return string
     */
    public function getFeedback()
    {
        return $this->feedback;
    }

    /**
     * @param string $feedback
     */
    public function setFeedback($feedback)
    {
        $this->feedback = $feedback;
    }

    public function toArray()
    {
        return [
            'id' => $this->getId(),
            'name' => $this->getName(),
            'data' => $this->getData(),
            'oldData' => $this->getOldData(),
            'objectClass' => $this->getObjectClass(),
            'objectId' => $this->getObjectId(),
            'parentClass' => $this->getParentClass(),
            'parentId' => $this->getParentId(),
            'action' => $this->getAction(),
            'username' => $this->getUsername(),
            'user' => $this->getUser(),
            'loggedAt' => $this->getLoggedAt(),
            'version' => $this->getVersion(),
            'feedbackStatus' => $this->getFeedbackStatus(),
            'feedback' => $this->getFeedback(),
            'supplierReply' => $this->getSupplierReply(),
        ]; // TODO: Change the autogenerated stub
    }

    public static function getStatuses()
    {
        return [
            self::STATUS_PENDING,
            self::STATUS_APPROVED,
            self::STATUS_FEEDBACK,
        ];
    }

    /**
     * @return string
     */
    public function getSupplierReply()
    {
        return $this->supplierReply;
    }

    /**
     * @param string $supplierReply
     */
    public function setSupplierReply($supplierReply)
    {
        $this->supplierReply = $supplierReply;
    }

    /**
     * @return bool
     */
    public function isRead()
    {
        return $this->isRead;
    }

    /**
     * @param bool $isRead
     */
    public function setIsRead($isRead)
    {
        $this->isRead = $isRead;
    }

}

